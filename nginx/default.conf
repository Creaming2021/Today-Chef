upstream frontend {
    server frontend:3000;
}

# upstream backend {
#     server backend:8080;
# }

server {
    listen 80;
    client_max_body_size 0;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name k4b204.p.ssafy.io;

    client_max_body_size 0;

    ssl_certificate /etc/letsencrypt/archive/k4b204.p.ssafy.io/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/archive/k4b204.p.ssafy.io/privkey1.pem;
    ssl_session_timeout 5m;
    ssl_prefer_server_ciphers on;

    location / {
        set $upstream frontend;

        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://$upstream;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
    }

    location /api {
        # set $upstream2 backend;

        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://k4b204.p.ssafy.io:8080;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /chat {
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://k4b204.p.ssafy.io:5000;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
    }

    location /socket.io/ {

        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With,Accept,Content-Type, Origin' always;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy false;

        proxy_pass http://k4b204.p.ssafy.io:5000;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /sockjs-node {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Connection "Upgrade";
    }

}
