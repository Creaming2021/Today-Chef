upstream frontend {
    server frontend:3000;
}

upstream backend {
    server backend:8080;
}

server {
    listen 80;
    client_max_body_size 10M;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name k4b204.p.ssafy.io;

    client_max_body_size 10M;

    ssl_certificate /etc/letsencrypt/archive/k4b204.p.ssafy.io/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/archive/k4b204.p.ssafy.io/privkey1.pem;
    ssl_session_timeout 5m;
    ssl_prefer_server_ciphers on;

    location / {
        set $upstream frontend;

        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://$upstream;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
    }

    location /api {
        set $upstream2 backend;

        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://$upstream2;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /sockjs-node {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Connection "Upgrade";
    }

    location /live {
        proxy_pass http://k4b204.p.ssafy.io:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # location /openvidu {
    #     proxy_pass http://k4b204.p.ssafy.io:4443;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header X-Forwarded-Proto https;
    #     proxy_set_header Connection "Upgrade";
    #     proxy_set_header Host $host;
    # }

}
